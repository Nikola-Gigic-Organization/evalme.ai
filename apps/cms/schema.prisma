// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id           String       @id @default(cuid())
  name         String       @default("")
  email        String       @unique @default("")
  password     String
  topicAnswers UserAnswer[] @relation("UserAnswer_user")
  createdAt    DateTime?    @default(now())
  updatedAt    DateTime?    @default(now())
}

model Topic {
  id          String          @id @default(cuid())
  slug        String          @unique @default("")
  title       String          @default("")
  description String          @default("")
  questions   TopicQuestion[] @relation("TopicQuestion_topic")
  tags        Tag[]           @relation("Topic_tags")
  createdAt   DateTime?       @default(now())
  updatedAt   DateTime?       @default(now())
}

model TopicQuestion {
  id                       String       @id @default(cuid())
  topic                    Topic?       @relation("TopicQuestion_topic", fields: [topicId], references: [id])
  topicId                  String?      @map("topic")
  title                    String       @default("")
  text                     String       @default("")
  order                    Int?         @default(1)
  createdAt                DateTime?    @default(now())
  updatedAt                DateTime?    @default(now())
  from_UserAnswer_question UserAnswer[] @relation("UserAnswer_question")

  @@index([topicId])
}

model Tag {
  id              String    @id @default(cuid())
  name            String    @unique @default("")
  createdAt       DateTime? @default(now())
  updatedAt       DateTime? @default(now())
  from_Topic_tags Topic[]   @relation("Topic_tags")
}

model UserAnswer {
  id           String         @id @default(cuid())
  user         User?          @relation("UserAnswer_user", fields: [userId], references: [id])
  userId       String?        @map("user")
  question     TopicQuestion? @relation("UserAnswer_question", fields: [questionId], references: [id])
  questionId   String?        @map("question")
  userAnswer   String         @default("")
  openAIAnswer String         @default("")
  createdAt    DateTime?      @default(now())
  updatedAt    DateTime?      @default(now())

  @@index([userId])
  @@index([questionId])
}
